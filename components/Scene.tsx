/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/scene.gltf --transform --types 
Files: public/models/scene.gltf [23.9KB] > C:\Users\ASUS\Documents\SECOND SEMISTER\hackathon\Axis25\dimensions\scene-transformed.glb [1.01MB] (-4144%)
Author: spaceexpert (https://sketchfab.com/spaceexpert)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/earth-globe-sci-fi-look-8434c67a411f484c81db412b49de0427
Title: Earth Globe Sci-Fi Look
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type ActionName = 'rotation'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    graph_graph_0: THREE.Mesh
    DOTS_dots_0: THREE.Mesh
    graph_02_graph_0: THREE.Mesh
    globe_ambient_globe_ambient_0: THREE.Mesh
    main_globe_main_0: THREE.Mesh
    clouds_clouds_0: THREE.Mesh
  }
  materials: {
    graph: THREE.MeshStandardMaterial
    dots: THREE.MeshStandardMaterial
    globe_ambient: THREE.MeshStandardMaterial
    main: THREE.MeshStandardMaterial
    clouds: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/scene-transformed.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="RootNode" rotation={[-Math.PI / 2, -0.059, Math.PI]} scale={0.022}>
          <group name="graph" rotation={[Math.PI / 2, 0, 0]}>
            <mesh name="graph_graph_0" geometry={nodes.graph_graph_0.geometry} material={materials.graph} />
          </group>
          <group name="DOTS">
            <mesh name="DOTS_dots_0" geometry={nodes.DOTS_dots_0.geometry} material={materials.dots} />
          </group>
          <group name="graph_02" rotation={[Math.PI / 2, -Math.PI / 3, 0.96]}>
            <mesh name="graph_02_graph_0" geometry={nodes.graph_02_graph_0.geometry} material={materials.graph} />
          </group>
        </group>
        <group name="Dummy001" rotation={[Math.PI, 0, -2.791]} scale={0.022}>
          <group name="globe_ambient" rotation={[-Math.PI / 2, 0, 0]}>
            <mesh name="globe_ambient_globe_ambient_0" geometry={nodes.globe_ambient_globe_ambient_0.geometry} material={materials.globe_ambient} />
          </group>
          <group name="main_globe" rotation={[-Math.PI / 2, 0, 0]}>
            <mesh name="main_globe_main_0" geometry={nodes.main_globe_main_0.geometry} material={materials.main} />
          </group>
          <group name="clouds" rotation={[-Math.PI / 2, -0.428, 0]}>
            <mesh name="clouds_clouds_0" geometry={nodes.clouds_clouds_0.geometry} material={materials.clouds} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/scene-transformed.glb')
